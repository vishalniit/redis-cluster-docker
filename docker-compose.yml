version: '3.7'

services:
  redis-master:
    image: redis:5-alpine
    container_name: redis-master
    hostname: redis-master
    restart: always
    volumes:
      - /datadrive/redis/redis_1/:/data
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: 200M
        reservations:
          cpus: '0.05'
          memory: 50M
    command: redis-server --requirepass F1tanUusDaII --appendonly yes
    ports:
      - '127.0.0.1:6380:6379'
    networks: 
      - redis-net-stage
    privileged: true  
    security_opt: 
      - no-new-privileges
    sysctls:
      net.core.somaxconn: '10000'
  redis-slave:
    build: ./redis-slaves/5-alpine-slave
#    container_name: redis-node-2
#    hostname: redis-node-2
    restart: always
    volumes:
      - type: bind
        source: /datadrive/redis/redis{{.Task.Slot}}
        target: /data
#    volumes:
#      - /datadrive/redis/redis_2/:/data
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: 200M
        reservations:
          cpus: '0.05'
          memory: 50M
    command: redis-server /etc/redis/redis.conf --slaveof redis-master --requirepass F1tanUusDaII --appendonly yes --masterauth F1tanUusDaII  
    ports:
      - '127.0.0.1:6381-6385:6379'
    depends_on:
      - redis-master
    networks: 
      - redis-net-stage
    privileged: true
    security_opt: 
      - no-new-privileges
    sysctls:
      net.core.somaxconn: '10000'  
  redis-sentinel-1:
    build: ./sentinel/sentinel-1
    container_name: redis-sentinel-1
    hostname: redis-sentinel-1
    restart: always
    volumes:
      - /datadrive/redis/sentinel-1/:/data
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: 200M
        reservations:
          cpus: '0.05'
          memory: 50M
    ports:
      - '127.0.0.1::26379'
    depends_on:
      - redis-master
      - redis-slave
    networks:
      - redis-net-stage
    privileged: true
    security_opt: 
      - no-new-privileges
  redis-sentinel-2:
    build: ./sentinel/sentinel-2
    container_name: redis-sentinel-2
    hostname: redis-sentinel-2
    restart: always
    volumes:
      - /datadrive/redis/sentinel-2/:/data
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: 200M
        reservations:
          cpus: '0.05'
          memory: 50M
    ports:
      - '127.0.0.1::26379'
    depends_on:
      - redis-master
      - redis-slave
      - redis-sentinel-1
    networks:
      - redis-net-stage
    privileged: true
    security_opt: 
      - no-new-privileges
  redis-sentinel-3:
    build: ./sentinel/sentinel-3
    container_name: redis-sentinel-3
    hostname: redis-sentinel-3
    restart: always
    volumes:
      - /datadrive/redis/sentinel-3/:/data
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: 200M
        reservations:
          cpus: '0.05'
          memory: 50M
    ports:
      - '127.0.0.1::26379'
    depends_on:
      - redis-master
      - redis-slave
      - redis-sentinel-1
      - redis-sentinel-2
    networks:
      - redis-net-stage
    privileged: true
    security_opt: 
      - no-new-privileges
  haproxy-prod-redis:
    build: ./haproxy
    hostname: haproxy-prod-redis
    container_name: haproxy-prod-redis
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: 200M
        reservations:
          cpus: '0.05'
          memory: 50M
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro  
    depends_on:
      - redis-master
      - redis-slave
      - redis-sentinel-1
      - redis-sentinel-2
      - redis-sentinel-3
    ports:
      - '127.0.0.1:9000:9000'
      - '127.0.0.1:6379:6379'
    environment:
      - ADMIN_USERNAME=haproxy
      - ADMIN_PASSWORD=haproxy
      - REDIS_HOSTS=redis-node-1,redis-node-2,redis-node-3
    networks: 
      - redis-net-stage
    security_opt: 
      - no-new-privileges
networks:
 redis-net-stage:
  name: Redis-Cluster-stage